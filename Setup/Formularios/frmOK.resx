<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>